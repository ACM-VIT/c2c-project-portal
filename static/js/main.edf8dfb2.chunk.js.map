{"version":3,"sources":["components/common/topbar.js","components/common/urls.js","components/landing/index.js","components/projects/project.js","components/projects/projectList.js","components/projects/index.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","react_default","a","createElement","className","style","fontWeight","color","urls","BASE_URL","Landing","state","name","statement","solution","track","challenge","techStack","futureWork","gitLink","members","projImage","openSnackbar","msgSnackbar","vertical","horizontal","handleChange","event","target","files","file","_this","setState","document","getElementById","textContent","value","replace","Object","defineProperty","imgBtnClicked","elem","Event","dispatchEvent","console","log","onClose","submit","e","preventDefault","form","FormData","_this$state","append","axios","post","concat","then","resp","data","success","message","catch","err","_this2","this","_this$state2","common_topbar","index_es","container","item","lg","md","xs","onSubmit","marginLeft","id","label","multiline","spellcheck","onChange","margin","width","placeholder","type","ref","c","multiple","onClick","props","history","push","anchorOrigin","open","autoHideDuration","Component","Project","problem","challenges","github","team","ProjectList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","projects","showProjects","length","i","project","showProject","expandIcon","ArrowDropDown_default","title","projects_project","future","Projects","getProjects","loading","handleTrack","classList","padding","textAlign","projectList","App","react_router_dom","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edf8dfb2.chunk.js","sourcesContent":["import React from 'react';\nimport './topbar.css';\n\nconst Topbar = () => {\n  return (\n    <nav>\n      <div>\n        <span className=\"theme-color\" style={{fontWeight: 'bold'}}>C2C</span>&nbsp;&nbsp;&nbsp;\n        <span style={{color: '#fff'}}>Projects</span>\n      </div>\n    </nav>\n  );\n}\n\nexport default Topbar;\n\n","let urls = {\n  BASE_URL: 'https://guarded-reef-95895.herokuapp.com'\n}\n\nexport default urls;","import React, { Component } from 'react';\nimport {TextField, Grid, Snackbar} from '@material-ui/core';\nimport Topbar from '../common/topbar';\nimport './landing.css';\nimport axios from 'axios';\nimport urls from '../common/urls';\n\nlet BASE_URL = urls.BASE_URL;\n\nclass Landing extends Component {\n  state = {\n    name: '',\n    statement: '',\n    solution: '',\n    track: '',\n    challenge: '',\n    techStack: '',\n    futureWork: '',\n    gitLink: '',\n    members: '',\n    projImage: '',\n    openSnackbar: false,\n    msgSnackbar: '',\n    vertical: 'top',\n    horizontal: 'center'\n  }\n  handleChange = name => event => {\n    if(name==='projImg' && event.target.files) {\n      let file = this.file.files[0];\n      this.setState({projImage: file});\n      document.getElementById('val').textContent = event.target.value.replace(/C:\\\\fakepath\\\\/i, '');\n    }\n    else {\n        this.setState({[name]: event.target.value});\n    }\n  };\n\n  imgBtnClicked = () => {\n    let elem = document.getElementById('proj-img');\n    let event = new Event('click');\n    elem.dispatchEvent(event);\n    this.handleChange('projImg');\n    console.log(event);\n  }\n\n  onClose = () => {\n\t\tthis.setState({openSnackbar: false});\n\t}\n\n  submit = (e) => {\n    e.preventDefault();\n    let form = new FormData();\n    let {name, statement, solution, challenge, track, techStack, futureWork, gitLink, members, projImage} = this.state;\n    form.append('title', name);\n    form.append('problem', statement);\n    form.append('track', track);\n    form.append('solution', solution);\n    form.append('challenges', challenge);\n    form.append('techStack', techStack);\n    form.append('future', futureWork);\n    form.append('github', gitLink);\n    form.append('team', members);\n    form.append('image', projImage);\n    // let config = {\n    //   headers : {'Authorization':'Bearer '+cookie},\n    // };\n    axios.post(`${BASE_URL}/addProject`, form)\n    .then(resp=> {\n      let data = resp.data;\n      console.log(data);\n      if(data.success===false) {\n        this.setState({openSnackbar: true, msgSnackbar: data.message});\n      }\n      else if(data.success) {\n        this.setState({openSnackbar: true, \n          msgSnackbar: 'Congratulations! You have submitted successfully!'})\n      }\n    })\n    .catch(err=> {\n      console.log(err);\n      this.setState({openSnackbar: true, \n      msgSnackbar: 'Please check your internet connection and try again!'});\n    })\n  }\n\n  render() {\n    let {vertical, horizontal} = this.state;\n    return (\n      <div>\n        <Topbar />\n        <Grid container >\n          <Grid item lg={4} md={5} xs={12}>\n            <form onSubmit={this.submit} style={{marginLeft: '3rem'}}>\n              <TextField\n                id=\"standard-name\"\n                label=\"Project Name\"\n                multiline\n                spellcheck={false}\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                margin=\"normal\"\n              />\n              <div className=\"single-line\">\n                <TextField\n                  label=\"Problem Statement\"\n                  multiline\n                  spellcheck={false}\n                  value={this.state.statement}\n                  onChange={this.handleChange('statement')}\n                  style={{width: '75%'}}\n                  margin=\"normal\"\n                />\n                <select className=\"track\" onChange={this.handleChange('track')}>\n                  <option value=\"\">Select Track</option>\n                  <option value=\"construction\">Construction</option>\n                  <option value=\"defence\">Defence</option>\n                  <option value=\"devops\">DevOps</option>\n                  <option value=\"health\">Health & Fitness</option>\n                  <option value=\"data\">Data Integrity</option>\n                  <option value=\"education\">Education</option>\n                  <option value=\"travel\">Recreation & Travel</option>\n                  <option value=\"disability\">People with Disabilities</option>\n                </select>\n              </div>\n              <TextField\n                label=\"Solution\"\n                multiline\n                spellcheck={false}\n                value={this.state.solution}\n                onChange={this.handleChange('solution')}\n                margin=\"normal\"\n              />\n              <TextField\n                label=\"Challenge Faced\"\n                multiline\n                spellcheck={false}\n                value={this.state.challenge}\n                onChange={this.handleChange('challenge')}\n                margin=\"normal\"\n              />\n              <TextField\n                label=\"Technical Stack\"\n                multiline\n                spellcheck={false}\n                value={this.state.techStack}\n                onChange={this.handleChange('techStack')}\n                margin=\"normal\"\n              />\n              <TextField\n                label=\"Future Work\"\n                multiline\n                spellcheck={false}\n                value={this.state.futureWork}\n                onChange={this.handleChange('futureWork')}\n                margin=\"normal\"\n              />\n              <TextField\n                label=\"Github Link\"\n                multiline\n                spellcheck={false}\n                value={this.state.gitLink}\n                onChange={this.handleChange('gitLink')}\n                margin=\"normal\"\n              />\n              <TextField\n                label=\"Team Members\"\n                multiline\n                placeholder=\"(Member1,Member2,...)\"\n                spellcheck={false}\n                value={this.state.members}\n                onChange={this.handleChange('members')}\n                margin=\"normal\"\n              />\n              <div className=\"proj-img\">\n                <input type='file'\n                  id=\"proj-img\"\n                  ref={c => {\n                    this.file = c;\n                  }}\n                  multiple=\"false\"\n                  onChange={this.handleChange('projImg')}\n                 />\n                <span id='val'>Select Project Image</span>\n                {/* <span id='file-btn' onClick={this.imgBtnClicked}>Choose Image</span> */}\n              </div>\n              <button type=\"submit\" className=\"submit-btn\">SUBMIT</button>\n            </form>\n          </Grid>\n          <Grid item md={1} lg={1}></Grid>\n          <Grid item xs={12} md={6} lg={7} className=\"right-text\">\n            <div>\n              <h1 className=\"color-white\">\n                Submit & Take a look at all the<br/> other projects being developed here<br/> at Code2Create’19\n              </h1>\n            </div>\n            <div><button className=\"view-btn\" onClick={()=> this.props.history.push('/projects')}>VIEW</button></div>\n          </Grid>\n        </Grid>\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={this.state.openSnackbar}\n          message={this.state.msgSnackbar}\n          autoHideDuration={4000}\n          onClose={this.onClose}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\n\nconst Project = (props) => {\n  return (\n    <div style={{width: '100%'}}>\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <h4>Problem Statement</h4>\n          <p>{props.problem}</p>\n          <h4>Solution</h4>\n          <p>{props.solution}</p>\n          <h4>Challenge Faced</h4>\n          <p>{props.challenges}</p>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <h4>Technical Stack</h4>\n          <p>{props.techStack}</p>\n          <h4>Future Work</h4>\n          <p>{props.futureWork}</p>\n          <h4>Github Link</h4>\n          <p>{props.github}</p>\n          <h4>Team</h4>\n          <p>{props.team}</p>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Project;\n\n","import React, { Component } from 'react';\nimport {ExpansionPanel, ExpansionPanelSummary, \n  ExpansionPanelDetails} from '@material-ui/core';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\n// import axios from 'axios';\nimport urls from '../common/urls';\nimport Project from './project';\n\nlet BASE_URL = urls.BASE_URL;\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        projects: [],\n        // loading: false\n      }\n  }\n\n  render() {\n    let {projects} = this.props;\n    let showProjects=[];\n    console.log(projects.length);\n    for(let i=0;i<projects.length;i++) {\n      let project = projects[i];\n      let showProject = (\n        <ExpansionPanel className=\"project-item\">\n          <ExpansionPanelSummary className=\"project-name\" expandIcon={<ArrowDropDown/>}>\n            <p>{project.title}</p>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Project problem={project.problem} solution={project.solution} \n            challenges={project.challenges} techStack={project.techStack} \n            gitLink={project.github} team={project.team} futureWork={project.future} />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      );\n      showProjects.push(showProject);\n    }\n    console.log(showProjects.length);\n      return (\n        <div className=\"\">\n          {/* <CircularProgress className=\"theme-color\" /> */}\n          {/* {loading? <CircularProgress className=\"circular-loader theme-color\" />: showProjects} */}\n          {showProjects}\n        </div>\n      )\n  }\n}\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport {Grid, CircularProgress} from '@material-ui/core';\nimport Topbar from '../common/topbar';\nimport ProjectsList from './projectList';\nimport axios from 'axios';\nimport urls from '../common/urls';\nimport './project.css';\n\nlet BASE_URL = urls.BASE_URL;\n\nclass Projects extends Component {\n  constructor() {\n    super();\n    this.state = {\n      track: 'construction',\n      projects: '',\n      loading: false\n    }\n    this.getProjects('construction');\n  }\n\n  getProjects = (track) => {\n    // console.log(this.props);\n    // let {track} = this.state;\n    this.setState({loading: true});\n    axios.post(`${BASE_URL}/getProject`, {track: track})\n    .then(resp=> {\n      console.log('hi');\n      let data = resp.data;\n      console.log(data);\n      this.setState({projects: data.data, loading: false});\n    }).\n    catch(err=> {\n      console.log(err);\n    });\n  }\n\n  handleTrack = name => event => {\n    this.getProjects(name);\n    this.setState({track: name});\n    console.log(event.target.classList);\n  }\n  render() {\n    let {track, projects, loading} = this.state;\n    return (\n      <div style={{padding: '2rem'}}>\n        <Topbar/>\n        <Grid container>\n          <Grid item lg={3} md={3} xs={12}>\n            <div className=\"tracks\">\n              <ul>\n                <li onClick={this.handleTrack('construction')}>Construction</li>\n                <li onClick={this.handleTrack('defence')}>Defence</li>\n                <li onClick={this.handleTrack('devops')}>DevOps</li>\n                <li onClick={this.handleTrack('health')}>Health & Fitness</li>\n                <li onClick={this.handleTrack('data')}>Data Integrity</li>\n                <li onClick={this.handleTrack('education')}>Education</li>\n                <li onClick={this.handleTrack('travel')}>Recreation & Travel</li>\n                <li onClick={this.handleTrack('disabilities')}>People with Disabilities</li>\n              </ul>\n            </div>\n          </Grid>\n          {/* <Grid item lg={1} md={1} xs={12}></Grid> */}\n          <Grid item lg={8} md={8} xs={12} className=\"project-content\">\n            {loading && <div style={{textAlign: 'center'}} className=\"loader-div\"><CircularProgress className=\"theme-color\" /></div>}\n            {!loading && projects && projects.length>0 ? <ProjectsList track={track} projects={projects} />: \n            !loading && <p className=\"no-submissions-p\">No Submissions on this track yet!!</p>}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\nimport Landing from './components/landing';\nimport Projects from './components/projects';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Landing} exact />\n          <Route path=\"/projects\" component={Projects} exact />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}